<|im_start|>system
Given a set of Python coding problems (involving data science) and their corresponding correct Python implementations, identify the specific weaknesses of a model.

You are provided with {negative_instance_num} code generation problems that the model fails to solve and {positive_instance_num} code generation problems that the model successfully solves. Based on this data, analyze and describe the model's weaknesses by identifying the high-level coding capabilities (related to data science) that the model struggles with. Group similar weaknesses under broader categories where applicable.
<|im_end|>
<|im_start|>user
## Task
You are given {negative_instance_num} Python coding problems (involving data science) that the model fails to solve and their corresponding correct Python implementations, along with {positive_instance_num} coding problems that the model successfully solves. Analyze and describe the weaknesses of the model by identifying specific high-level coding capabilities it struggles with, summarizing any related weaknesses under broader categories.

## Problems and Implementations
### Failed Cases
{negative_inputs_and_outputs}

### Successful Cases
{positive_inputs_and_outputs}

## Requirements
- **Output exactly {capability_num} weaknesses.**
- Each weakness should be phrased as a specific capability, avoiding negative phrasing such as "lack," "difficulty," or similar terms.
- Each weakness should be an **informative and detailed phrase** that refers to a **specific skill or capability** comprehensively covering key aspects of the failure, without including any specifics from the code problems or implementations.
- Where possible, group related weaknesses under a single broader weakness category.
- Output each weakness as a standalone phrase, with **no additional text, prefixes, symbols, or notations** on any line. For example, do NOT include numbered list markers, numerical prefixes, or numeric labels (e.g., '1.', '2.', etc.) in the output.
<|im_end|>